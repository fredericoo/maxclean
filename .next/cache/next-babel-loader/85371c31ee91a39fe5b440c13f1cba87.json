{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Cookies from 'js-cookie';\nimport { prismicRepoName } from 'utils/prismicHelpers';\nexport default function useUpdatePreviewRef(preview, documentId) {\n  _s();\n\n  var router = useRouter();\n  useEffect(function () {\n    function updatePreview() {\n      return _updatePreview.apply(this, arguments);\n    }\n\n    function _updatePreview() {\n      _updatePreview = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var rawPreviewCookie, previewCookie, previewCookieObject, previewCookieRef;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!preview.isActive) {\n                  _context.next = 11;\n                  break;\n                }\n\n                rawPreviewCookie = Cookies.get('io.prismic.preview');\n\n                if (!rawPreviewCookie) {\n                  _context.next = 10;\n                  break;\n                }\n\n                previewCookie = JSON.parse(rawPreviewCookie);\n                previewCookieObject = previewCookie[\"\".concat(prismicRepoName, \".prismic.io\")];\n                previewCookieRef = previewCookieObject && previewCookieObject.preview ? previewCookieObject.preview : null;\n\n                if (!(previewCookieRef && preview.activeRef !== previewCookieRef)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", router.push(\"/api/preview?token=\".concat(previewCookieRef, \"&documentId=\").concat(documentId)));\n\n              case 8:\n                _context.next = 11;\n                break;\n\n              case 10:\n                return _context.abrupt(\"return\", router.push('/api/exit-preview'));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _updatePreview.apply(this, arguments);\n    }\n\n    updatePreview();\n  }, []);\n}\n\n_s(useUpdatePreviewRef, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["/Users/frederico/Documents/maxclean/utils/hooks/useUpdatePreviewRef.js"],"names":["useEffect","useRouter","Cookies","prismicRepoName","useUpdatePreviewRef","preview","documentId","router","updatePreview","isActive","rawPreviewCookie","get","previewCookie","JSON","parse","previewCookieObject","previewCookieRef","activeRef","push"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AAEA,eAAe,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,UAAtC,EAAkD;AAAA;;AAC/D,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCQ,aADD;AAAA;AAAA;;AAAA;AAAA,gFACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIH,OAAO,CAACI,QADZ;AAAA;AAAA;AAAA;;AAEQC,gBAAAA,gBAFR,GAE2BR,OAAO,CAACS,GAAR,CAAY,oBAAZ,CAF3B;;AAAA,qBAGMD,gBAHN;AAAA;AAAA;AAAA;;AAIUE,gBAAAA,aAJV,GAI0BC,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAJ1B;AAKUK,gBAAAA,mBALV,GAKgCH,aAAa,WAAIT,eAAJ,iBAL7C;AAMUa,gBAAAA,gBANV,GAM6BD,mBAAmB,IAAIA,mBAAmB,CAACV,OAA3C,GACrBU,mBAAmB,CAACV,OADC,GAErB,IARR;;AAAA,sBAUQW,gBAAgB,IAAIX,OAAO,CAACY,SAAR,KAAsBD,gBAVlD;AAAA;AAAA;AAAA;;AAAA,iDAWaT,MAAM,CAACW,IAAP,8BAAkCF,gBAAlC,yBAAiEV,UAAjE,EAXb;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAcWC,MAAM,CAACW,IAAP,CAAY,mBAAZ,CAdX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAmBhBV,IAAAA,aAAa;AACZ,GApBQ,EAoBN,EApBM,CAAT;AAqBD;;GAxBuBJ,mB;UACPH,S","sourcesContent":["import { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Cookies from 'js-cookie'\nimport { prismicRepoName } from 'utils/prismicHelpers';\n\nexport default function useUpdatePreviewRef(preview, documentId) {\n  const router = useRouter()\n\n  useEffect(() => {\n    async function updatePreview() {\n    if (preview.isActive) {\n      const rawPreviewCookie = Cookies.get('io.prismic.preview')\n      if (rawPreviewCookie) {\n        const previewCookie = JSON.parse(rawPreviewCookie)\n        const previewCookieObject = previewCookie[`${prismicRepoName}.prismic.io`]\n        const previewCookieRef = previewCookieObject && previewCookieObject.preview\n          ? previewCookieObject.preview\n          : null\n\n        if (previewCookieRef && preview.activeRef !== previewCookieRef) {\n          return router.push(`/api/preview?token=${previewCookieRef}&documentId=${documentId}`)\n        }\n      } else {\n        return router.push('/api/exit-preview')\n      }\n    }\n  }\n  updatePreview();\n  }, [])\n}"]},"metadata":{},"sourceType":"module"}