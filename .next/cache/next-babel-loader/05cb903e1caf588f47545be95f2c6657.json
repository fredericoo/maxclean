{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport { default as splitting } from \"splitting\";\n\nvar SlideInText = function SlideInText(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var textRef = useRef();\n  useEffect(function () {\n    splitting({\n      target: textRef.current\n    });\n    gsap.from(textRef.current.childNodes, {\n      yPercent: 120,\n      stagger: 0.2,\n      duration: 1,\n      ease: \"back\"\n    });\n  }, [textRef]);\n  return __jsx(\"div\", {\n    ref: textRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(SlideInText, \"03a/W9zemG2g1Vmhz2i1tulxw6U=\");\n\n_c = SlideInText;\nexport default SlideInText;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideInText\");","map":{"version":3,"sources":["/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js"],"names":["useRef","useEffect","gsap","default","splitting","SlideInText","children","textRef","target","current","from","childNodes","yPercent","stagger","duration","ease"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,WAArC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACrC,MAAMC,OAAO,GAAGP,MAAM,EAAtB;AACAC,EAAAA,SAAS,CAAC,YAAM;AACfG,IAAAA,SAAS,CAAC;AAAEI,MAAAA,MAAM,EAAED,OAAO,CAACE;AAAlB,KAAD,CAAT;AACAP,IAAAA,IAAI,CAACQ,IAAL,CAAUH,OAAO,CAACE,OAAR,CAAgBE,UAA1B,EAAsC;AACrCC,MAAAA,QAAQ,EAAE,GAD2B;AAErCC,MAAAA,OAAO,EAAE,GAF4B;AAGrCC,MAAAA,QAAQ,EAAE,CAH2B;AAIrCC,MAAAA,IAAI,EAAE;AAJ+B,KAAtC;AAMA,GARQ,EAQN,CAACR,OAAD,CARM,CAAT;AASA,SAAO;AAAK,IAAA,GAAG,EAAEA,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,QAApB,CAAP;AACA,CAZD;;GAAMD,W;;KAAAA,W;AAcN,eAAeA,WAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport { default as splitting } from \"splitting\";\n\nconst SlideInText = ({ children }) => {\n\tconst textRef = useRef();\n\tuseEffect(() => {\n\t\tsplitting({ target: textRef.current });\n\t\tgsap.from(textRef.current.childNodes, {\n\t\t\tyPercent: 120,\n\t\t\tstagger: 0.2,\n\t\t\tduration: 1,\n\t\t\tease: \"back\",\n\t\t});\n\t}, [textRef]);\n\treturn <div ref={textRef}>{children}</div>;\n};\n\nexport default SlideInText;\n"]},"metadata":{},"sourceType":"module"}