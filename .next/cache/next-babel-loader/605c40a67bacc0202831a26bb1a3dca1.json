{"ast":null,"code":"var _jsxFileName = \"/Users/frederico/Documents/maxclean/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Client, manageLocal } from \"utils/prismicHelpers\";\nimport { homepageToolbarDocs } from \"utils/prismicToolbarQueries\";\nimport useUpdatePreviewRef from \"utils/hooks/useUpdatePreviewRef\";\nimport useUpdateToolbarDocs from \"utils/hooks/useUpdateToolbarDocs\";\nimport { Layout, SliceZone } from \"components\";\n/**\n * Homepage component\n */\n\nconst Homepage = ({\n  doc,\n  menu,\n  lang,\n  preview\n}) => {\n  if (doc && doc.data) {\n    useUpdatePreviewRef(preview, doc.id);\n    useUpdateToolbarDocs(homepageToolbarDocs(preview.activeRef, doc.lang), [doc]);\n    return __jsx(Layout, {\n      altLangs: doc.alternate_languages,\n      lang: lang,\n      menu: menu,\n      isPreview: preview.isActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }\n    }, __jsx(SliceZone, {\n      sliceZone: doc.data.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return __jsx(Layout, {\n    altLangs: doc.alternate_languages,\n    lang: lang,\n    menu: menu,\n    isPreview: preview.isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, \"Nothing loaded\");\n};\n\nexport async function getStaticProps({\n  preview,\n  previewData,\n  locale,\n  locales\n}) {\n  const ref = previewData ? previewData.ref : null;\n  const isPreview = preview || false;\n  const client = Client();\n  const doc = (await client.getSingle(\"homepage\", ref ? {\n    ref,\n    lang: locale\n  } : {\n    lang: locale\n  })) || {};\n  const menu = (await client.getSingle(\"top_menu\", ref ? {\n    ref,\n    lang: locale\n  } : {\n    lang: locale\n  })) || {};\n  const {\n    currentLang,\n    isMyMainLanguage\n  } = manageLocal(locales, locale);\n  return {\n    props: {\n      menu,\n      doc,\n      preview: {\n        isActive: isPreview,\n        activeRef: ref\n      },\n      lang: {\n        currentLang,\n        isMyMainLanguage\n      }\n    }\n  };\n}\nexport default Homepage;","map":{"version":3,"sources":["/Users/frederico/Documents/maxclean/pages/index.js"],"names":["React","Client","manageLocal","homepageToolbarDocs","useUpdatePreviewRef","useUpdateToolbarDocs","Layout","SliceZone","Homepage","doc","menu","lang","preview","data","id","activeRef","alternate_languages","isActive","body","getStaticProps","previewData","locale","locales","ref","isPreview","client","getSingle","currentLang","isMyMainLanguage","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,sBAApC;AACA,SAASC,mBAAT,QAAoC,6BAApC;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,YAAlC;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAClD,MAAIH,GAAG,IAAIA,GAAG,CAACI,IAAf,EAAqB;AACpBT,IAAAA,mBAAmB,CAACQ,OAAD,EAAUH,GAAG,CAACK,EAAd,CAAnB;AACAT,IAAAA,oBAAoB,CAACF,mBAAmB,CAACS,OAAO,CAACG,SAAT,EAAoBN,GAAG,CAACE,IAAxB,CAApB,EAAmD,CACtEF,GADsE,CAAnD,CAApB;AAIA,WACC,MAAC,MAAD;AACC,MAAA,QAAQ,EAAEA,GAAG,CAACO,mBADf;AAEC,MAAA,IAAI,EAAEL,IAFP;AAGC,MAAA,IAAI,EAAED,IAHP;AAIC,MAAA,SAAS,EAAEE,OAAO,CAACK,QAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMC,MAAC,SAAD;AAAW,MAAA,SAAS,EAAER,GAAG,CAACI,IAAJ,CAASK,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAUA;;AACD,SACC,MAAC,MAAD;AACC,IAAA,QAAQ,EAAET,GAAG,CAACO,mBADf;AAEC,IAAA,IAAI,EAAEL,IAFP;AAGC,IAAA,IAAI,EAAED,IAHP;AAIC,IAAA,SAAS,EAAEE,OAAO,CAACK,QAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD;AAUA,CA5BD;;AA8BA,OAAO,eAAeE,cAAf,CAA8B;AACpCP,EAAAA,OADoC;AAEpCQ,EAAAA,WAFoC;AAGpCC,EAAAA,MAHoC;AAIpCC,EAAAA;AAJoC,CAA9B,EAKJ;AACF,QAAMC,GAAG,GAAGH,WAAW,GAAGA,WAAW,CAACG,GAAf,GAAqB,IAA5C;AACA,QAAMC,SAAS,GAAGZ,OAAO,IAAI,KAA7B;AACA,QAAMa,MAAM,GAAGxB,MAAM,EAArB;AACA,QAAMQ,GAAG,GACR,CAAC,MAAMgB,MAAM,CAACC,SAAP,CACN,UADM,EAENH,GAAG,GAAG;AAAEA,IAAAA,GAAF;AAAOZ,IAAAA,IAAI,EAAEU;AAAb,GAAH,GAA2B;AAAEV,IAAAA,IAAI,EAAEU;AAAR,GAFxB,CAAP,KAGM,EAJP;AAKA,QAAMX,IAAI,GACT,CAAC,MAAMe,MAAM,CAACC,SAAP,CACN,UADM,EAENH,GAAG,GAAG;AAAEA,IAAAA,GAAF;AAAOZ,IAAAA,IAAI,EAAEU;AAAb,GAAH,GAA2B;AAAEV,IAAAA,IAAI,EAAEU;AAAR,GAFxB,CAAP,KAGM,EAJP;AAMA,QAAM;AAAEM,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAoC1B,WAAW,CAACoB,OAAD,EAAUD,MAAV,CAArD;AAEA,SAAO;AACNQ,IAAAA,KAAK,EAAE;AACNnB,MAAAA,IADM;AAEND,MAAAA,GAFM;AAGNG,MAAAA,OAAO,EAAE;AACRK,QAAAA,QAAQ,EAAEO,SADF;AAERT,QAAAA,SAAS,EAAEQ;AAFH,OAHH;AAONZ,MAAAA,IAAI,EAAE;AACLgB,QAAAA,WADK;AAELC,QAAAA;AAFK;AAPA;AADD,GAAP;AAcA;AAED,eAAepB,QAAf","sourcesContent":["import React from \"react\";\nimport { Client, manageLocal } from \"utils/prismicHelpers\";\nimport { homepageToolbarDocs } from \"utils/prismicToolbarQueries\";\nimport useUpdatePreviewRef from \"utils/hooks/useUpdatePreviewRef\";\nimport useUpdateToolbarDocs from \"utils/hooks/useUpdateToolbarDocs\";\nimport { Layout, SliceZone } from \"components\";\n\n/**\n * Homepage component\n */\nconst Homepage = ({ doc, menu, lang, preview }) => {\n\tif (doc && doc.data) {\n\t\tuseUpdatePreviewRef(preview, doc.id);\n\t\tuseUpdateToolbarDocs(homepageToolbarDocs(preview.activeRef, doc.lang), [\n\t\t\tdoc,\n\t\t]);\n\n\t\treturn (\n\t\t\t<Layout\n\t\t\t\taltLangs={doc.alternate_languages}\n\t\t\t\tlang={lang}\n\t\t\t\tmenu={menu}\n\t\t\t\tisPreview={preview.isActive}\n\t\t\t>\n\t\t\t\t<SliceZone sliceZone={doc.data.body} />\n\t\t\t</Layout>\n\t\t);\n\t}\n\treturn (\n\t\t<Layout\n\t\t\taltLangs={doc.alternate_languages}\n\t\t\tlang={lang}\n\t\t\tmenu={menu}\n\t\t\tisPreview={preview.isActive}\n\t\t>\n\t\t\tNothing loaded\n\t\t</Layout>\n\t);\n};\n\nexport async function getStaticProps({\n\tpreview,\n\tpreviewData,\n\tlocale,\n\tlocales,\n}) {\n\tconst ref = previewData ? previewData.ref : null;\n\tconst isPreview = preview || false;\n\tconst client = Client();\n\tconst doc =\n\t\t(await client.getSingle(\n\t\t\t\"homepage\",\n\t\t\tref ? { ref, lang: locale } : { lang: locale }\n\t\t)) || {};\n\tconst menu =\n\t\t(await client.getSingle(\n\t\t\t\"top_menu\",\n\t\t\tref ? { ref, lang: locale } : { lang: locale }\n\t\t)) || {};\n\n\tconst { currentLang, isMyMainLanguage } = manageLocal(locales, locale);\n\n\treturn {\n\t\tprops: {\n\t\t\tmenu,\n\t\t\tdoc,\n\t\t\tpreview: {\n\t\t\t\tisActive: isPreview,\n\t\t\t\tactiveRef: ref,\n\t\t\t},\n\t\t\tlang: {\n\t\t\t\tcurrentLang,\n\t\t\t\tisMyMainLanguage,\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default Homepage;\n"]},"metadata":{},"sourceType":"module"}