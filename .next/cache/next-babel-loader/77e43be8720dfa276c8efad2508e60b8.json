{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/frederico/Documents/maxclean/components/slices/CardSection.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Image from \"next/image\";\nimport { RichText } from \"prismic-reactjs\";\nimport styles from \"./CardSection.module.scss\";\nimport grid from \"../../styles/grid.module.scss\";\nimport Button from \"components/Button\";\nimport Masonry from \"react-masonry-css\";\n\nvar CardSection = function CardSection(_ref) {\n  var slice = _ref.slice,\n      handleCta = _ref.handleCta;\n\n  var handleLoad = function handleLoad(e) {\n    if (e.target.srcset) {\n      console.log(\"loaded\", e.target.scrset);\n    }\n  };\n\n  return __jsx(\"section\", {\n    className: \"\".concat(styles.section, \" \").concat(grid.inner),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, __jsx(Masonry, {\n    breakpointCols: 3,\n    className: \"masonry\",\n    columnClassName: \"masonry__column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, slice.items.map(function (item, index) {\n    return __jsx(\"article\", {\n      key: \"card-\".concat(index),\n      className: \"\\n                        \".concat(styles.card, \" \\n                        \").concat(item.negative ? styles.negative : \"\", \" \\n                        \").concat(item.card_size ? styles[\"size--\".concat(item.card_size)] : \"\", \"\\n                    \"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }\n    }, __jsx(\"h2\", {\n      className: styles[\"card__heading\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, item.title), item.image.url && __jsx(\"div\", {\n      className: styles[\"card__img\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 8\n      }\n    }, __jsx(Image, {\n      src: item.image.url,\n      width: item.image.dimensions.width,\n      height: item.image.dimensions.height,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: styles[\"card__body\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, RichText.render(item.bodytext)), __jsx(\"div\", {\n      className: styles[\"card__cta\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      onClick: function onClick(e) {\n        e.preventDefault;\n        handleCta(item.popup);\n      },\n      type: \"button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }\n    }, item.cta_text)));\n  })));\n};\n\n_c = CardSection;\nexport default CardSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardSection\");","map":{"version":3,"sources":["/Users/frederico/Documents/maxclean/components/slices/CardSection.js"],"names":["Image","RichText","styles","grid","Button","Masonry","CardSection","slice","handleCta","handleLoad","e","target","srcset","console","log","scrset","section","inner","items","map","item","index","card","negative","card_size","title","image","url","dimensions","width","height","render","bodytext","preventDefault","popup","cta_text"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport { RichText } from \"prismic-reactjs\";\nimport styles from \"./CardSection.module.scss\";\nimport grid from \"../../styles/grid.module.scss\";\nimport Button from \"components/Button\";\nimport Masonry from \"react-masonry-css\";\n\nconst CardSection = ({ slice, handleCta }) => {\n\tconst handleLoad = (e) => {\n\t\tif (e.target.srcset) {\n\t\t\tconsole.log(\"loaded\", e.target.scrset);\n\t\t}\n\t};\n\n\treturn (\n\t\t<section className={`${styles.section} ${grid.inner}`}>\n\t\t\t<Masonry\n\t\t\t\tbreakpointCols={3}\n\t\t\t\tclassName=\"masonry\"\n\t\t\t\tcolumnClassName=\"masonry__column\"\n\t\t\t>\n\t\t\t\t{slice.items.map((item, index) => (\n\t\t\t\t\t<article\n\t\t\t\t\t\tkey={`card-${index}`}\n\t\t\t\t\t\tclassName={`\n                        ${styles.card} \n                        ${item.negative ? styles.negative : \"\"} \n                        ${\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.card_size\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? styles[`size--${item.card_size}`]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n                    `}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h2 className={styles[\"card__heading\"]}>{item.title}</h2>\n\t\t\t\t\t\t{item.image.url && (\n\t\t\t\t\t\t\t<div className={styles[\"card__img\"]}>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsrc={item.image.url}\n\t\t\t\t\t\t\t\t\twidth={item.image.dimensions.width}\n\t\t\t\t\t\t\t\t\theight={item.image.dimensions.height}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<div className={styles[\"card__body\"]}>\n\t\t\t\t\t\t\t{RichText.render(item.bodytext)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles[\"card__cta\"]}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault;\n\t\t\t\t\t\t\t\t\thandleCta(item.popup);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.cta_text}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</article>\n\t\t\t\t))}\n\t\t\t</Masonry>\n\t\t</section>\n\t);\n};\n\nexport default CardSection;\n"]},"metadata":{},"sourceType":"module"}