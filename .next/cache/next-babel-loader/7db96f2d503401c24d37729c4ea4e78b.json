{"ast":null,"code":"import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Cookies from 'js-cookie';\nimport { prismicRepoName } from 'utils/prismicHelpers';\nexport default function useUpdatePreviewRef(preview, documentId) {\n  const router = useRouter();\n  useEffect(() => {\n    async function updatePreview() {\n      if (preview.isActive) {\n        const rawPreviewCookie = Cookies.get('io.prismic.preview');\n\n        if (rawPreviewCookie) {\n          const previewCookie = JSON.parse(rawPreviewCookie);\n          const previewCookieObject = previewCookie[`${prismicRepoName}.prismic.io`];\n          const previewCookieRef = previewCookieObject && previewCookieObject.preview ? previewCookieObject.preview : null;\n\n          if (previewCookieRef && preview.activeRef !== previewCookieRef) {\n            return router.push(`/api/preview?token=${previewCookieRef}&documentId=${documentId}`);\n          }\n        } else {\n          return router.push('/api/exit-preview');\n        }\n      }\n    }\n\n    updatePreview();\n  }, []);\n}","map":{"version":3,"sources":["/Users/frederico/nextjs/maxclean/utils/hooks/useUpdatePreviewRef.js"],"names":["useEffect","useRouter","Cookies","prismicRepoName","useUpdatePreviewRef","preview","documentId","router","updatePreview","isActive","rawPreviewCookie","get","previewCookie","JSON","parse","previewCookieObject","previewCookieRef","activeRef","push"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AAEA,eAAe,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,UAAtC,EAAkD;AAC/D,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,aAAf,GAA+B;AAC/B,UAAIH,OAAO,CAACI,QAAZ,EAAsB;AACpB,cAAMC,gBAAgB,GAAGR,OAAO,CAACS,GAAR,CAAY,oBAAZ,CAAzB;;AACA,YAAID,gBAAJ,EAAsB;AACpB,gBAAME,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAAtB;AACA,gBAAMK,mBAAmB,GAAGH,aAAa,CAAE,GAAET,eAAgB,aAApB,CAAzC;AACA,gBAAMa,gBAAgB,GAAGD,mBAAmB,IAAIA,mBAAmB,CAACV,OAA3C,GACrBU,mBAAmB,CAACV,OADC,GAErB,IAFJ;;AAIA,cAAIW,gBAAgB,IAAIX,OAAO,CAACY,SAAR,KAAsBD,gBAA9C,EAAgE;AAC9D,mBAAOT,MAAM,CAACW,IAAP,CAAa,sBAAqBF,gBAAiB,eAAcV,UAAW,EAA5E,CAAP;AACD;AACF,SAVD,MAUO;AACL,iBAAOC,MAAM,CAACW,IAAP,CAAY,mBAAZ,CAAP;AACD;AACF;AACF;;AACDV,IAAAA,aAAa;AACZ,GApBQ,EAoBN,EApBM,CAAT;AAqBD","sourcesContent":["import { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Cookies from 'js-cookie'\nimport { prismicRepoName } from 'utils/prismicHelpers';\n\nexport default function useUpdatePreviewRef(preview, documentId) {\n  const router = useRouter()\n\n  useEffect(() => {\n    async function updatePreview() {\n    if (preview.isActive) {\n      const rawPreviewCookie = Cookies.get('io.prismic.preview')\n      if (rawPreviewCookie) {\n        const previewCookie = JSON.parse(rawPreviewCookie)\n        const previewCookieObject = previewCookie[`${prismicRepoName}.prismic.io`]\n        const previewCookieRef = previewCookieObject && previewCookieObject.preview\n          ? previewCookieObject.preview\n          : null\n\n        if (previewCookieRef && preview.activeRef !== previewCookieRef) {\n          return router.push(`/api/preview?token=${previewCookieRef}&documentId=${documentId}`)\n        }\n      } else {\n        return router.push('/api/exit-preview')\n      }\n    }\n  }\n  updatePreview();\n  }, [])\n}"]},"metadata":{},"sourceType":"module"}