{"ast":null,"code":"var _jsxFileName = \"/Users/frederico/nextjs/maxclean/components/SliceZone.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from \"react\";\nimport { Quote, Hero, CardSection, BigCard, TextColumn, ImageSection, Spacer } from \"./slices\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { Popup } from \"components/Popup/Popup\";\n\nconst SliceZone = ({\n  sliceZone\n}) => {\n  const {\n    0: popup,\n    1: setPopup\n  } = useState();\n  let popupRef = useRef();\n\n  const onPopup = content => {\n    setPopup(content);\n\n    if (content) {\n      disableBodyScroll(popupRef);\n    } else {\n      enableBodyScroll(popupRef);\n    }\n  };\n\n  return __jsx(React.Fragment, null, sliceZone.map((slice, index) => {\n    switch (slice.slice_type) {\n      case \"hero\":\n        return __jsx(Hero, {\n          slice: slice,\n          key: `slice-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 14\n          }\n        });\n\n      case \"card_section\":\n        return __jsx(CardSection, {\n          handleCta: onPopup,\n          slice: slice,\n          key: `slice-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 8\n          }\n        });\n\n      case \"big_card\":\n        return __jsx(BigCard, {\n          handleCta: onPopup,\n          slice: slice,\n          key: `slice-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 8\n          }\n        });\n\n      case \"inspirational_quote\":\n        return __jsx(Quote, {\n          slice: slice,\n          key: `slice-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }\n        });\n\n      case \"text_column\":\n        return __jsx(TextColumn, {\n          slice: slice,\n          key: `slice-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }\n        });\n\n      case \"image_section\":\n        return __jsx(ImageSection, {\n          slice: slice,\n          key: `slice-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 14\n          }\n        });\n\n      case \"spacer\":\n        return __jsx(Spacer, {\n          height: slice.primary.height,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }\n        });\n\n      default:\n        return null;\n    }\n  }), popup && __jsx(Popup, {\n    ref: popupRef,\n    handleClose: () => onPopup(null),\n    content: popup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default SliceZone;","map":{"version":3,"sources":["/Users/frederico/nextjs/maxclean/components/SliceZone.js"],"names":["React","useState","useRef","Quote","Hero","CardSection","BigCard","TextColumn","ImageSection","Spacer","disableBodyScroll","enableBodyScroll","Popup","SliceZone","sliceZone","popup","setPopup","popupRef","onPopup","content","map","slice","index","slice_type","primary","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SACCC,KADD,EAECC,IAFD,EAGCC,WAHD,EAICC,OAJD,EAKCC,UALD,EAMCC,YAND,EAOCC,MAPD,QAQO,UARP;AASA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,kBAApD;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,EAAlC;AACA,MAAIgB,QAAQ,GAAGf,MAAM,EAArB;;AACA,QAAMgB,OAAO,GAAIC,OAAD,IAAa;AAC5BH,IAAAA,QAAQ,CAACG,OAAD,CAAR;;AACA,QAAIA,OAAJ,EAAa;AACZT,MAAAA,iBAAiB,CAACO,QAAD,CAAjB;AACA,KAFD,MAEO;AACNN,MAAAA,gBAAgB,CAACM,QAAD,CAAhB;AACA;AACD,GAPD;;AASA,SACC,4BACEH,SAAS,CAACM,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChC,YAAQD,KAAK,CAACE,UAAd;AACC,WAAK,MAAL;AACC,eAAO,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,KAAb;AAAoB,UAAA,GAAG,EAAG,SAAQC,KAAM,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,cAAL;AACC,eACC,MAAC,WAAD;AACC,UAAA,SAAS,EAAEJ,OADZ;AAEC,UAAA,KAAK,EAAEG,KAFR;AAGC,UAAA,GAAG,EAAG,SAAQC,KAAM,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAOD,WAAK,UAAL;AACC,eACC,MAAC,OAAD;AACC,UAAA,SAAS,EAAEJ,OADZ;AAEC,UAAA,KAAK,EAAEG,KAFR;AAGC,UAAA,GAAG,EAAG,SAAQC,KAAM,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAOD,WAAK,qBAAL;AACC,eAAO,MAAC,KAAD;AAAO,UAAA,KAAK,EAAED,KAAd;AAAqB,UAAA,GAAG,EAAG,SAAQC,KAAM,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,aAAL;AACC,eAAO,MAAC,UAAD;AAAY,UAAA,KAAK,EAAED,KAAnB;AAA0B,UAAA,GAAG,EAAG,SAAQC,KAAM,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,eAAL;AACC,eAAO,MAAC,YAAD;AAAc,UAAA,KAAK,EAAED,KAArB;AAA4B,UAAA,GAAG,EAAG,SAAQC,KAAM,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,QAAL;AACC,eAAO,MAAC,MAAD;AAAQ,UAAA,MAAM,EAAED,KAAK,CAACG,OAAN,CAAcC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD;AACC,eAAO,IAAP;AA5BF;AA8BA,GA/BA,CADF,EAiCEV,KAAK,IACL,MAAC,KAAD;AACC,IAAA,GAAG,EAAEE,QADN;AAEC,IAAA,WAAW,EAAE,MAAMC,OAAO,CAAC,IAAD,CAF3B;AAGC,IAAA,OAAO,EAAEH,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADD;AA2CA,CAvDD;;AAyDA,eAAeF,SAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n\tQuote,\n\tHero,\n\tCardSection,\n\tBigCard,\n\tTextColumn,\n\tImageSection,\n\tSpacer,\n} from \"./slices\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { Popup } from \"components/Popup/Popup\";\n\nconst SliceZone = ({ sliceZone }) => {\n\tconst [popup, setPopup] = useState();\n\tlet popupRef = useRef();\n\tconst onPopup = (content) => {\n\t\tsetPopup(content);\n\t\tif (content) {\n\t\t\tdisableBodyScroll(popupRef);\n\t\t} else {\n\t\t\tenableBodyScroll(popupRef);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{sliceZone.map((slice, index) => {\n\t\t\t\tswitch (slice.slice_type) {\n\t\t\t\t\tcase \"hero\":\n\t\t\t\t\t\treturn <Hero slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"card_section\":\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CardSection\n\t\t\t\t\t\t\t\thandleCta={onPopup}\n\t\t\t\t\t\t\t\tslice={slice}\n\t\t\t\t\t\t\t\tkey={`slice-${index}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\tcase \"big_card\":\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<BigCard\n\t\t\t\t\t\t\t\thandleCta={onPopup}\n\t\t\t\t\t\t\t\tslice={slice}\n\t\t\t\t\t\t\t\tkey={`slice-${index}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\tcase \"inspirational_quote\":\n\t\t\t\t\t\treturn <Quote slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"text_column\":\n\t\t\t\t\t\treturn <TextColumn slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"image_section\":\n\t\t\t\t\t\treturn <ImageSection slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"spacer\":\n\t\t\t\t\t\treturn <Spacer height={slice.primary.height} />;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t})}\n\t\t\t{popup && (\n\t\t\t\t<Popup\n\t\t\t\t\tref={popupRef}\n\t\t\t\t\thandleClose={() => onPopup(null)}\n\t\t\t\t\tcontent={popup}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default SliceZone;\n"]},"metadata":{},"sourceType":"module"}