{"ast":null,"code":"import { Client } from 'utils/prismicHelpers';\nexport const pageToolbarDocs = (uid, ref = null, lang) => async () => {\n  const page = await Client().getByUID('page', uid, {\n    ref,\n    lang,\n    fetch: 'page.display_title'\n  });\n  const menu = await Client().getSingle('top_menu', {\n    ref,\n    lang,\n    fetch: 'top_menu.display_title'\n  });\n  return {\n    page,\n    menu\n  };\n};\nexport const homepageToolbarDocs = (ref = null, lang) => async () => {\n  const homepage = await Client().getSingle('homepage', {\n    ref,\n    lang,\n    fetch: 'homepage.display_title'\n  });\n  const menu = await Client().getSingle('top_menu', {\n    ref,\n    lang,\n    fetch: 'top_menu.display_title'\n  });\n  return {\n    homepage,\n    menu\n  };\n};","map":{"version":3,"sources":["/Users/frederico/Documents/maxclean/utils/prismicToolbarQueries.js"],"names":["Client","pageToolbarDocs","uid","ref","lang","page","getByUID","fetch","menu","getSingle","homepageToolbarDocs","homepage"],"mappings":"AAAA,SAASA,MAAT,QAAuB,sBAAvB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAG,GAAG,IAAZ,EAAkBC,IAAlB,KAA4B,YAAY;AACrE,QAAMC,IAAI,GAAG,MAAML,MAAM,GAAGM,QAAT,CAAkB,MAAlB,EAA0BJ,GAA1B,EAA+B;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYG,IAAAA,KAAK,EAAE;AAAnB,GAA/B,CAAnB;AACA,QAAMC,IAAI,GAAG,MAAMR,MAAM,GAAGS,SAAT,CAAmB,UAAnB,EAA+B;AAAEN,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaG,IAAAA,KAAK,EAAE;AAApB,GAA/B,CAAnB;AAEA,SAAO;AACLF,IAAAA,IADK;AAELG,IAAAA;AAFK,GAAP;AAID,CARM;AAWP,OAAO,MAAME,mBAAmB,GAAG,CAACP,GAAG,GAAG,IAAP,EAAaC,IAAb,KAAuB,YAAY;AACpE,QAAMO,QAAQ,GAAG,MAAMX,MAAM,GAAGS,SAAT,CAAmB,UAAnB,EAA+B;AAAEN,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaG,IAAAA,KAAK,EAAE;AAApB,GAA/B,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMR,MAAM,GAAGS,SAAT,CAAmB,UAAnB,EAA+B;AAAEN,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaG,IAAAA,KAAK,EAAE;AAApB,GAA/B,CAAnB;AAEA,SAAO;AACLI,IAAAA,QADK;AAELH,IAAAA;AAFK,GAAP;AAID,CARM","sourcesContent":["import { Client } from 'utils/prismicHelpers';\n\nexport const pageToolbarDocs = (uid, ref = null, lang) => (async () => {\n  const page = await Client().getByUID('page', uid, {ref, lang, fetch: 'page.display_title'})\n  const menu = await Client().getSingle('top_menu', { ref, lang, fetch: 'top_menu.display_title'}) \n\n  return {\n    page,\n    menu\n  }\n})\n\n\nexport const homepageToolbarDocs = (ref = null, lang) => (async () => {\n  const homepage = await Client().getSingle('homepage', { ref, lang, fetch: 'homepage.display_title' }) \n  const menu = await Client().getSingle('top_menu', { ref, lang, fetch: 'top_menu.display_title' }) \n\n  return {\n    homepage,\n    menu\n  }\n})\n"]},"metadata":{},"sourceType":"module"}