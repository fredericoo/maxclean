{"ast":null,"code":"var _jsxFileName = \"/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport styles from \"./SlideInText.module.scss\";\n\nconst SlideInText = ({\n  text\n}) => {\n  const charsRef = useRef([]);\n  charsRef.current = new Array(text.length()).map((ref, index) => usernameRefs.current[index] = React.createref());\n  useEffect(() => {\n    gsap.from(textRef.current.firstChild.childNodes, {\n      yPercent: 120,\n      stagger: 0.2,\n      duration: 1,\n      ease: \"back\"\n    });\n  }, [charsRef]);\n  return __jsx(\"span\", {\n    \"aria-label\": text,\n    role: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, text.split(\" \").map((word, index) => __jsx(\"span\", {\n    className: styles.word,\n    \"aria-hidden\": \"true\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, word.split(\"\").map((char, index) => __jsx(\"span\", {\n    key: index,\n    className: styles.char,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, char)))));\n};\n\nexport default SlideInText;","map":{"version":3,"sources":["/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js"],"names":["useRef","useEffect","gsap","styles","SlideInText","text","charsRef","current","Array","length","map","ref","index","usernameRefs","React","createref","from","textRef","firstChild","childNodes","yPercent","stagger","duration","ease","split","word","char"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAMC,QAAQ,GAAGN,MAAM,CAAC,EAAD,CAAvB;AACAM,EAAAA,QAAQ,CAACC,OAAT,GAAmB,IAAIC,KAAJ,CAAUH,IAAI,CAACI,MAAL,EAAV,EAAyBC,GAAzB,CAClB,CAACC,GAAD,EAAMC,KAAN,KAAiBC,YAAY,CAACN,OAAb,CAAqBK,KAArB,IAA8BE,KAAK,CAACC,SAAN,EAD7B,CAAnB;AAGAd,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,IAAI,CAACc,IAAL,CAAUC,OAAO,CAACV,OAAR,CAAgBW,UAAhB,CAA2BC,UAArC,EAAiD;AAChDC,MAAAA,QAAQ,EAAE,GADsC;AAEhDC,MAAAA,OAAO,EAAE,GAFuC;AAGhDC,MAAAA,QAAQ,EAAE,CAHsC;AAIhDC,MAAAA,IAAI,EAAE;AAJ0C,KAAjD;AAMA,GAPQ,EAON,CAACjB,QAAD,CAPM,CAAT;AAQA,SACC;AAAM,kBAAYD,IAAlB;AAAwB,IAAA,IAAI,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,IAAI,CAACmB,KAAL,CAAW,GAAX,EAAgBd,GAAhB,CAAoB,CAACe,IAAD,EAAOb,KAAP,KACpB;AAAM,IAAA,SAAS,EAAET,MAAM,CAACsB,IAAxB;AAA8B,mBAAY,MAA1C;AAAiD,IAAA,GAAG,EAAEb,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEa,IAAI,CAACD,KAAL,CAAW,EAAX,EAAed,GAAf,CAAmB,CAACgB,IAAD,EAAOd,KAAP,KACnB;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,SAAS,EAAET,MAAM,CAACuB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,IADF,CADA,CADF,CADA,CADF,CADD;AAaA,CA1BD;;AA4BA,eAAetB,WAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport styles from \"./SlideInText.module.scss\";\n\nconst SlideInText = ({ text }) => {\n\tconst charsRef = useRef([]);\n\tcharsRef.current = new Array(text.length()).map(\n\t\t(ref, index) => (usernameRefs.current[index] = React.createref())\n\t);\n\tuseEffect(() => {\n\t\tgsap.from(textRef.current.firstChild.childNodes, {\n\t\t\tyPercent: 120,\n\t\t\tstagger: 0.2,\n\t\t\tduration: 1,\n\t\t\tease: \"back\",\n\t\t});\n\t}, [charsRef]);\n\treturn (\n\t\t<span aria-label={text} role=\"heading\">\n\t\t\t{text.split(\" \").map((word, index) => (\n\t\t\t\t<span className={styles.word} aria-hidden=\"true\" key={index}>\n\t\t\t\t\t{word.split(\"\").map((char, index) => (\n\t\t\t\t\t\t<span key={index} className={styles.char}>\n\t\t\t\t\t\t\t{char}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</span>\n\t);\n};\n\nexport default SlideInText;\n"]},"metadata":{},"sourceType":"module"}