{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/frederico/nextjs/maxclean/components/AnimateText/AnimateText.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createRef, useEffect, useState, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\";\nimport styles from \"./AnimateText.module.scss\";\n\nvar SlideInText = function SlideInText(_ref) {\n  _s();\n\n  var text = _ref.text,\n      once = _ref.once,\n      propsFrom = _ref.propsFrom,\n      propsTo = _ref.propsTo;\n  gsap.registerPlugin(ScrollTrigger);\n\n  var _useState = useState([]),\n      charsRef = _useState[0],\n      setCharsRef = _useState[1];\n\n  var triggerRef = useRef();\n  useEffect(function () {\n    setCharsRef(function (charsRef) {\n      return Array(text.split(\"\").length).fill().map(function (_, i) {\n        return charsRef[i] || /*#__PURE__*/createRef();\n      });\n    });\n  }, [text]);\n  useEffect(function () {\n    gsap.fromTo(charsRef.map(function (_char) {\n      return _char.current;\n    }), propsFrom, _objectSpread({\n      stagger: 0.05,\n      duration: 1,\n      ease: \"power3.out\",\n      scrollTrigger: {\n        toggleActions: !once ? \"play reverse play reverse\" : \"play play play play\",\n        trigger: triggerRef.current,\n        start: \"top bottom\",\n        end: \"bottom top\"\n      }\n    }, propsTo));\n  }, [charsRef]);\n  var refIndex = 0;\n  return __jsx(\"span\", {\n    ref: triggerRef,\n    \"aria-label\": text,\n    role: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, text.split(\" \").map(function (word, wordIndex) {\n    return __jsx(\"span\", {\n      className: styles.word,\n      \"aria-hidden\": \"true\",\n      key: wordIndex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, word.split(\"\").map(function (_char2, index) {\n      refIndex++;\n      return __jsx(\"span\", {\n        ref: charsRef[refIndex - 1],\n        key: index,\n        className: styles[\"char\"],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }\n      }, _char2);\n    }));\n  }));\n};\n\n_s(SlideInText, \"L5RXs+G4NvnubyJbw7pd54nTquY=\");\n\n_c = SlideInText;\nexport default SlideInText;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideInText\");","map":{"version":3,"sources":["/Users/frederico/nextjs/maxclean/components/AnimateText/AnimateText.js"],"names":["createRef","useEffect","useState","useRef","gsap","ScrollTrigger","styles","SlideInText","text","once","propsFrom","propsTo","registerPlugin","charsRef","setCharsRef","triggerRef","Array","split","length","fill","map","_","i","fromTo","char","current","stagger","duration","ease","scrollTrigger","toggleActions","trigger","start","end","refIndex","word","wordIndex","index"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,MAAzC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAwC;AAAA;;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC3DP,EAAAA,IAAI,CAACQ,cAAL,CAAoBP,aAApB;;AAD2D,kBAG3BH,QAAQ,CAAC,EAAD,CAHmB;AAAA,MAGpDW,QAHoD;AAAA,MAG1CC,WAH0C;;AAI3D,MAAMC,UAAU,GAAGZ,MAAM,EAAzB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACfa,IAAAA,WAAW,CAAC,UAACD,QAAD;AAAA,aACXG,KAAK,CAACR,IAAI,CAACS,KAAL,CAAW,EAAX,EAAeC,MAAhB,CAAL,CACEC,IADF,GAEEC,GAFF,CAEM,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUT,QAAQ,CAACS,CAAD,CAAR,iBAAetB,SAAS,EAAlC;AAAA,OAFN,CADW;AAAA,KAAD,CAAX;AAKA,GANQ,EAMN,CAACQ,IAAD,CANM,CAAT;AAQAP,EAAAA,SAAS,CAAC,YAAM;AACfG,IAAAA,IAAI,CAACmB,MAAL,CACCV,QAAQ,CAACO,GAAT,CAAa,UAACI,KAAD;AAAA,aAAUA,KAAI,CAACC,OAAf;AAAA,KAAb,CADD,EAECf,SAFD;AAIEgB,MAAAA,OAAO,EAAE,IAJX;AAKEC,MAAAA,QAAQ,EAAE,CALZ;AAMEC,MAAAA,IAAI,EAAE,YANR;AAOEC,MAAAA,aAAa,EAAE;AACdC,QAAAA,aAAa,EAAE,CAACrB,IAAD,GACZ,2BADY,GAEZ,qBAHW;AAIdsB,QAAAA,OAAO,EAAEhB,UAAU,CAACU,OAJN;AAKdO,QAAAA,KAAK,EAAE,YALO;AAMdC,QAAAA,GAAG,EAAE;AANS;AAPjB,OAeKtB,OAfL;AAkBA,GAnBQ,EAmBN,CAACE,QAAD,CAnBM,CAAT;AAqBA,MAAIqB,QAAQ,GAAG,CAAf;AACA,SACC;AAAM,IAAA,GAAG,EAAEnB,UAAX;AAAuB,kBAAYP,IAAnC;AAAyC,IAAA,IAAI,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,IAAI,CAACS,KAAL,CAAW,GAAX,EAAgBG,GAAhB,CAAoB,UAACe,IAAD,EAAOC,SAAP;AAAA,WACpB;AAAM,MAAA,SAAS,EAAE9B,MAAM,CAAC6B,IAAxB;AAA8B,qBAAY,MAA1C;AAAiD,MAAA,GAAG,EAAEC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,IAAI,CAAClB,KAAL,CAAW,EAAX,EAAeG,GAAf,CAAmB,UAACI,MAAD,EAAOa,KAAP,EAAiB;AACpCH,MAAAA,QAAQ;AACR,aACC;AACC,QAAA,GAAG,EAAErB,QAAQ,CAACqB,QAAQ,GAAG,CAAZ,CADd;AAEC,QAAA,GAAG,EAAEG,KAFN;AAGC,QAAA,SAAS,EAAE/B,MAAM,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKEkB,MALF,CADD;AASA,KAXA,CADF,CADoB;AAAA,GAApB,CADF,CADD;AAoBA,CAxDD;;GAAMjB,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import { createRef, useEffect, useState, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\";\nimport styles from \"./AnimateText.module.scss\";\n\nconst SlideInText = ({ text, once, propsFrom, propsTo }) => {\n\tgsap.registerPlugin(ScrollTrigger);\n\n\tconst [charsRef, setCharsRef] = useState([]);\n\tconst triggerRef = useRef();\n\n\tuseEffect(() => {\n\t\tsetCharsRef((charsRef) =>\n\t\t\tArray(text.split(\"\").length)\n\t\t\t\t.fill()\n\t\t\t\t.map((_, i) => charsRef[i] || createRef())\n\t\t);\n\t}, [text]);\n\n\tuseEffect(() => {\n\t\tgsap.fromTo(\n\t\t\tcharsRef.map((char) => char.current),\n\t\t\tpropsFrom,\n\t\t\t{\n\t\t\t\tstagger: 0.05,\n\t\t\t\tduration: 1,\n\t\t\t\tease: \"power3.out\",\n\t\t\t\tscrollTrigger: {\n\t\t\t\t\ttoggleActions: !once\n\t\t\t\t\t\t? \"play reverse play reverse\"\n\t\t\t\t\t\t: \"play play play play\",\n\t\t\t\t\ttrigger: triggerRef.current,\n\t\t\t\t\tstart: \"top bottom\",\n\t\t\t\t\tend: \"bottom top\",\n\t\t\t\t},\n\t\t\t\t...propsTo,\n\t\t\t}\n\t\t);\n\t}, [charsRef]);\n\n\tlet refIndex = 0;\n\treturn (\n\t\t<span ref={triggerRef} aria-label={text} role=\"heading\">\n\t\t\t{text.split(\" \").map((word, wordIndex) => (\n\t\t\t\t<span className={styles.word} aria-hidden=\"true\" key={wordIndex}>\n\t\t\t\t\t{word.split(\"\").map((char, index) => {\n\t\t\t\t\t\trefIndex++;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tref={charsRef[refIndex - 1]}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={styles.char}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{char}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</span>\n\t);\n};\n\nexport default SlideInText;\n"]},"metadata":{},"sourceType":"module"}