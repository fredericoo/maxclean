{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createRef, useEffect, useState, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\";\nimport styles from \"./SlideInText.module.scss\";\n\nvar SlideInText = function SlideInText(_ref) {\n  _s();\n\n  var text = _ref.text,\n      once = _ref.once;\n  gsap.registerPlugin(ScrollTrigger);\n\n  var _useState = useState([]),\n      charsRef = _useState[0],\n      setCharsRef = _useState[1];\n\n  var triggerRef = useRef();\n  useEffect(function () {\n    setCharsRef(function (charsRef) {\n      return Array(text.split(\"\").length).fill().map(function (_, i) {\n        return charsRef[i] || /*#__PURE__*/createRef();\n      });\n    });\n  }, [text]);\n  useEffect(function () {\n    gsap.to(charsRef.map(function (_char) {\n      return _char.current;\n    }), {\n      y: 0,\n      stagger: 0.05,\n      duration: 1,\n      ease: \"power3.out\",\n      scrollTrigger: {\n        toggleActions: !once ? \"play reverse play reverse\" : \"play play play play\",\n        markers: true,\n        trigger: triggerRef.current,\n        start: \"top bottom\",\n        end: \"bottom top\"\n      }\n    });\n  }, [charsRef]);\n  var refIndex = 0;\n  return __jsx(\"span\", {\n    ref: triggerRef,\n    \"aria-label\": text,\n    role: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, text.split(\" \").map(function (word, wordIndex) {\n    return __jsx(\"span\", {\n      className: styles.word,\n      \"aria-hidden\": \"true\",\n      key: wordIndex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, word.split(\"\").map(function (_char2, index) {\n      refIndex++;\n      return __jsx(\"span\", {\n        ref: charsRef[refIndex - 1],\n        key: index,\n        className: styles[\"char\"],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }\n      }, _char2);\n    }));\n  }));\n};\n\n_s(SlideInText, \"L5RXs+G4NvnubyJbw7pd54nTquY=\");\n\n_c = SlideInText;\nexport default SlideInText;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideInText\");","map":{"version":3,"sources":["/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js"],"names":["createRef","useEffect","useState","useRef","gsap","ScrollTrigger","styles","SlideInText","text","once","registerPlugin","charsRef","setCharsRef","triggerRef","Array","split","length","fill","map","_","i","to","char","current","y","stagger","duration","ease","scrollTrigger","toggleActions","markers","trigger","start","end","refIndex","word","wordIndex","index"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,MAAzC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA;;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACvCL,EAAAA,IAAI,CAACM,cAAL,CAAoBL,aAApB;;AADuC,kBAGPH,QAAQ,CAAC,EAAD,CAHD;AAAA,MAGhCS,QAHgC;AAAA,MAGtBC,WAHsB;;AAIvC,MAAMC,UAAU,GAAGV,MAAM,EAAzB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACfW,IAAAA,WAAW,CAAC,UAACD,QAAD;AAAA,aACXG,KAAK,CAACN,IAAI,CAACO,KAAL,CAAW,EAAX,EAAeC,MAAhB,CAAL,CACEC,IADF,GAEEC,GAFF,CAEM,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUT,QAAQ,CAACS,CAAD,CAAR,iBAAepB,SAAS,EAAlC;AAAA,OAFN,CADW;AAAA,KAAD,CAAX;AAKA,GANQ,EAMN,CAACQ,IAAD,CANM,CAAT;AAQAP,EAAAA,SAAS,CAAC,YAAM;AACfG,IAAAA,IAAI,CAACiB,EAAL,CACCV,QAAQ,CAACO,GAAT,CAAa,UAACI,KAAD;AAAA,aAAUA,KAAI,CAACC,OAAf;AAAA,KAAb,CADD,EAEC;AACCC,MAAAA,CAAC,EAAE,CADJ;AAECC,MAAAA,OAAO,EAAE,IAFV;AAGCC,MAAAA,QAAQ,EAAE,CAHX;AAICC,MAAAA,IAAI,EAAE,YAJP;AAKCC,MAAAA,aAAa,EAAE;AACdC,QAAAA,aAAa,EAAE,CAACpB,IAAD,GACZ,2BADY,GAEZ,qBAHW;AAIdqB,QAAAA,OAAO,EAAE,IAJK;AAKdC,QAAAA,OAAO,EAAElB,UAAU,CAACU,OALN;AAMdS,QAAAA,KAAK,EAAE,YANO;AAOdC,QAAAA,GAAG,EAAE;AAPS;AALhB,KAFD;AAkBA,GAnBQ,EAmBN,CAACtB,QAAD,CAnBM,CAAT;AAqBA,MAAIuB,QAAQ,GAAG,CAAf;AACA,SACC;AAAM,IAAA,GAAG,EAAErB,UAAX;AAAuB,kBAAYL,IAAnC;AAAyC,IAAA,IAAI,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,IAAI,CAACO,KAAL,CAAW,GAAX,EAAgBG,GAAhB,CAAoB,UAACiB,IAAD,EAAOC,SAAP;AAAA,WACpB;AAAM,MAAA,SAAS,EAAE9B,MAAM,CAAC6B,IAAxB;AAA8B,qBAAY,MAA1C;AAAiD,MAAA,GAAG,EAAEC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,IAAI,CAACpB,KAAL,CAAW,EAAX,EAAeG,GAAf,CAAmB,UAACI,MAAD,EAAOe,KAAP,EAAiB;AACpCH,MAAAA,QAAQ;AACR,aACC;AACC,QAAA,GAAG,EAAEvB,QAAQ,CAACuB,QAAQ,GAAG,CAAZ,CADd;AAEC,QAAA,GAAG,EAAEG,KAFN;AAGC,QAAA,SAAS,EAAE/B,MAAM,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKEgB,MALF,CADD;AASA,KAXA,CADF,CADoB;AAAA,GAApB,CADF,CADD;AAoBA,CAxDD;;GAAMf,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import { createRef, useEffect, useState, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\";\nimport styles from \"./SlideInText.module.scss\";\n\nconst SlideInText = ({ text, once }) => {\n\tgsap.registerPlugin(ScrollTrigger);\n\n\tconst [charsRef, setCharsRef] = useState([]);\n\tconst triggerRef = useRef();\n\n\tuseEffect(() => {\n\t\tsetCharsRef((charsRef) =>\n\t\t\tArray(text.split(\"\").length)\n\t\t\t\t.fill()\n\t\t\t\t.map((_, i) => charsRef[i] || createRef())\n\t\t);\n\t}, [text]);\n\n\tuseEffect(() => {\n\t\tgsap.to(\n\t\t\tcharsRef.map((char) => char.current),\n\t\t\t{\n\t\t\t\ty: 0,\n\t\t\t\tstagger: 0.05,\n\t\t\t\tduration: 1,\n\t\t\t\tease: \"power3.out\",\n\t\t\t\tscrollTrigger: {\n\t\t\t\t\ttoggleActions: !once\n\t\t\t\t\t\t? \"play reverse play reverse\"\n\t\t\t\t\t\t: \"play play play play\",\n\t\t\t\t\tmarkers: true,\n\t\t\t\t\ttrigger: triggerRef.current,\n\t\t\t\t\tstart: \"top bottom\",\n\t\t\t\t\tend: \"bottom top\",\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}, [charsRef]);\n\n\tlet refIndex = 0;\n\treturn (\n\t\t<span ref={triggerRef} aria-label={text} role=\"heading\">\n\t\t\t{text.split(\" \").map((word, wordIndex) => (\n\t\t\t\t<span className={styles.word} aria-hidden=\"true\" key={wordIndex}>\n\t\t\t\t\t{word.split(\"\").map((char, index) => {\n\t\t\t\t\t\trefIndex++;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tref={charsRef[refIndex - 1]}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={styles.char}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{char}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</span>\n\t);\n};\n\nexport default SlideInText;\n"]},"metadata":{},"sourceType":"module"}