{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/frederico/Documents/maxclean/components/SliceZone.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from \"react\";\nimport { EmailSignup, FullWidthImage, HeadlineWithButton, InfoWithImage, TextInfo, Hero, CardSection } from \"./slices\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { Popup } from \"components/Popup/Popup\";\n\nvar SliceZone = function SliceZone(_ref) {\n  _s();\n\n  var sliceZone = _ref.sliceZone;\n\n  var _useState = useState(),\n      popup = _useState[0],\n      setPopup = _useState[1];\n\n  var popupRef = useRef();\n\n  var onPopup = function onPopup(content) {\n    setPopup(content);\n\n    if (content) {\n      disableBodyScroll(popupRef);\n    } else {\n      enableBodyScroll(popupRef);\n    }\n  };\n\n  return __jsx(React.Fragment, null, sliceZone.map(function (slice, index) {\n    switch (slice.slice_type) {\n      case \"hero\":\n        return __jsx(Hero, {\n          slice: slice,\n          key: \"slice-\".concat(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 14\n          }\n        });\n\n      case \"card_section\":\n        return __jsx(CardSection, {\n          handleCta: onPopup,\n          slice: slice,\n          key: \"slice-\".concat(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 8\n          }\n        });\n\n      case \"text_info\":\n        return __jsx(TextInfo, {\n          slice: slice,\n          key: \"slice-\".concat(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }\n        });\n\n      case \"info_with_image\":\n        return __jsx(InfoWithImage, {\n          slice: slice,\n          key: \"slice-\".concat(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }\n        });\n\n      case \"full_width_image\":\n        return __jsx(FullWidthImage, {\n          slice: slice,\n          key: \"slice-\".concat(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }\n        });\n\n      case \"headline_with_button\":\n        return __jsx(HeadlineWithButton, {\n          slice: slice,\n          key: \"slice-\".concat(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }\n        });\n\n      case \"email_signup\":\n        return __jsx(EmailSignup, {\n          slice: slice,\n          key: \"slice-\".concat(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }\n        });\n\n      default:\n        return null;\n    }\n  }), popup && __jsx(Popup, {\n    ref: popupRef,\n    handleClose: function handleClose() {\n      return onPopup(null);\n    },\n    content: popup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(SliceZone, \"Txk0niUNZXO8WKcXim5ORuFRRWE=\");\n\n_c = SliceZone;\nexport default SliceZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliceZone\");","map":{"version":3,"sources":["/Users/frederico/Documents/maxclean/components/SliceZone.js"],"names":["React","useState","useRef","EmailSignup","FullWidthImage","HeadlineWithButton","InfoWithImage","TextInfo","Hero","CardSection","disableBodyScroll","enableBodyScroll","Popup","SliceZone","sliceZone","popup","setPopup","popupRef","onPopup","content","map","slice","index","slice_type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SACCC,WADD,EAECC,cAFD,EAGCC,kBAHD,EAICC,aAJD,EAKCC,QALD,EAMCC,IAND,EAOCC,WAPD,QAQO,UARP;AASA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,kBAApD;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACVb,QAAQ,EADE;AAAA,MAC7Bc,KAD6B;AAAA,MACtBC,QADsB;;AAEpC,MAAIC,QAAQ,GAAGf,MAAM,EAArB;;AACA,MAAMgB,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAa;AAC5BH,IAAAA,QAAQ,CAACG,OAAD,CAAR;;AACA,QAAIA,OAAJ,EAAa;AACZT,MAAAA,iBAAiB,CAACO,QAAD,CAAjB;AACA,KAFD,MAEO;AACNN,MAAAA,gBAAgB,CAACM,QAAD,CAAhB;AACA;AACD,GAPD;;AASA,SACC,4BACEH,SAAS,CAACM,GAAV,CAAc,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAChC,YAAQD,KAAK,CAACE,UAAd;AACC,WAAK,MAAL;AACC,eAAO,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,KAAb;AAAoB,UAAA,GAAG,kBAAWC,KAAX,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,cAAL;AACC,eACC,MAAC,WAAD;AACC,UAAA,SAAS,EAAEJ,OADZ;AAEC,UAAA,KAAK,EAAEG,KAFR;AAGC,UAAA,GAAG,kBAAWC,KAAX,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAOD,WAAK,WAAL;AACC,eAAO,MAAC,QAAD;AAAU,UAAA,KAAK,EAAED,KAAjB;AAAwB,UAAA,GAAG,kBAAWC,KAAX,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,iBAAL;AACC,eAAO,MAAC,aAAD;AAAe,UAAA,KAAK,EAAED,KAAtB;AAA6B,UAAA,GAAG,kBAAWC,KAAX,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,kBAAL;AACC,eAAO,MAAC,cAAD;AAAgB,UAAA,KAAK,EAAED,KAAvB;AAA8B,UAAA,GAAG,kBAAWC,KAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,sBAAL;AACC,eAAO,MAAC,kBAAD;AAAoB,UAAA,KAAK,EAAED,KAA3B;AAAkC,UAAA,GAAG,kBAAWC,KAAX,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD,WAAK,cAAL;AACC,eAAO,MAAC,WAAD;AAAa,UAAA,KAAK,EAAED,KAApB;AAA2B,UAAA,GAAG,kBAAWC,KAAX,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACD;AACC,eAAO,IAAP;AAtBF;AAwBA,GAzBA,CADF,EA2BEP,KAAK,IACL,MAAC,KAAD;AACC,IAAA,GAAG,EAAEE,QADN;AAEC,IAAA,WAAW,EAAE;AAAA,aAAMC,OAAO,CAAC,IAAD,CAAb;AAAA,KAFd;AAGC,IAAA,OAAO,EAAEH,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,CADD;AAqCA,CAjDD;;GAAMF,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n\tEmailSignup,\n\tFullWidthImage,\n\tHeadlineWithButton,\n\tInfoWithImage,\n\tTextInfo,\n\tHero,\n\tCardSection,\n} from \"./slices\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { Popup } from \"components/Popup/Popup\";\n\nconst SliceZone = ({ sliceZone }) => {\n\tconst [popup, setPopup] = useState();\n\tlet popupRef = useRef();\n\tconst onPopup = (content) => {\n\t\tsetPopup(content);\n\t\tif (content) {\n\t\t\tdisableBodyScroll(popupRef);\n\t\t} else {\n\t\t\tenableBodyScroll(popupRef);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{sliceZone.map((slice, index) => {\n\t\t\t\tswitch (slice.slice_type) {\n\t\t\t\t\tcase \"hero\":\n\t\t\t\t\t\treturn <Hero slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"card_section\":\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CardSection\n\t\t\t\t\t\t\t\thandleCta={onPopup}\n\t\t\t\t\t\t\t\tslice={slice}\n\t\t\t\t\t\t\t\tkey={`slice-${index}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\tcase \"text_info\":\n\t\t\t\t\t\treturn <TextInfo slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"info_with_image\":\n\t\t\t\t\t\treturn <InfoWithImage slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"full_width_image\":\n\t\t\t\t\t\treturn <FullWidthImage slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"headline_with_button\":\n\t\t\t\t\t\treturn <HeadlineWithButton slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tcase \"email_signup\":\n\t\t\t\t\t\treturn <EmailSignup slice={slice} key={`slice-${index}`} />;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t})}\n\t\t\t{popup && (\n\t\t\t\t<Popup\n\t\t\t\t\tref={popupRef}\n\t\t\t\t\thandleClose={() => onPopup(null)}\n\t\t\t\t\tcontent={popup}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default SliceZone;\n"]},"metadata":{},"sourceType":"module"}