{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport styles from \"./SlideInText.module.scss\";\n\nvar SlideInText = function SlideInText(_ref) {\n  _s();\n\n  var text = _ref.text;\n  var charsRef = useRef([]);\n  charsRef.current = new Array(text.length).map(function (ref, index) {\n    return usernameRefs.current[index] = React.createref();\n  });\n  useEffect(function () {\n    console.log(charsRef);\n    gsap.from(charsRef.current, {\n      yPercent: 120,\n      stagger: 0.2,\n      duration: 1,\n      ease: \"back\"\n    });\n  }, [charsRef]);\n  var refIndex = 0;\n  return __jsx(\"span\", {\n    \"aria-label\": text,\n    role: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, text.split(\" \").map(function (word, wordIndex) {\n    return __jsx(\"span\", {\n      className: styles.word,\n      \"aria-hidden\": \"true\",\n      key: wordIndex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, word.split(\"\").map(function (_char, index) {\n      refIndex++;\n      return __jsx(\"span\", {\n        ref: charsRef.current[refIndex - 1],\n        key: index,\n        className: styles[\"char\"],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 8\n        }\n      }, _char);\n    }));\n  }));\n};\n\n_s(SlideInText, \"IPJ2HSKB6GuWO2G4PNyfAzQNoDY=\");\n\n_c = SlideInText;\nexport default SlideInText;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideInText\");","map":{"version":3,"sources":["/Users/frederico/nextjs/maxclean/components/SlideInText/SlideInText.js"],"names":["useRef","useEffect","gsap","styles","SlideInText","text","charsRef","current","Array","length","map","ref","index","usernameRefs","React","createref","console","log","from","yPercent","stagger","duration","ease","refIndex","split","word","wordIndex","char"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACjC,MAAMC,QAAQ,GAAGN,MAAM,CAAC,EAAD,CAAvB;AACAM,EAAAA,QAAQ,CAACC,OAAT,GAAmB,IAAIC,KAAJ,CAAUH,IAAI,CAACI,MAAf,EAAuBC,GAAvB,CAClB,UAACC,GAAD,EAAMC,KAAN;AAAA,WAAiBC,YAAY,CAACN,OAAb,CAAqBK,KAArB,IAA8BE,KAAK,CAACC,SAAN,EAA/C;AAAA,GADkB,CAAnB;AAIAd,EAAAA,SAAS,CAAC,YAAM;AACfe,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAJ,IAAAA,IAAI,CAACgB,IAAL,CAAUZ,QAAQ,CAACC,OAAnB,EAA4B;AAC3BY,MAAAA,QAAQ,EAAE,GADiB;AAE3BC,MAAAA,OAAO,EAAE,GAFkB;AAG3BC,MAAAA,QAAQ,EAAE,CAHiB;AAI3BC,MAAAA,IAAI,EAAE;AAJqB,KAA5B;AAMA,GARQ,EAQN,CAAChB,QAAD,CARM,CAAT;AASA,MAAIiB,QAAQ,GAAG,CAAf;AACA,SACC;AAAM,kBAAYlB,IAAlB;AAAwB,IAAA,IAAI,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,IAAI,CAACmB,KAAL,CAAW,GAAX,EAAgBd,GAAhB,CAAoB,UAACe,IAAD,EAAOC,SAAP;AAAA,WACpB;AAAM,MAAA,SAAS,EAAEvB,MAAM,CAACsB,IAAxB;AAA8B,qBAAY,MAA1C;AAAiD,MAAA,GAAG,EAAEC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,IAAI,CAACD,KAAL,CAAW,EAAX,EAAed,GAAf,CAAmB,UAACiB,KAAD,EAAOf,KAAP,EAAiB;AACpCW,MAAAA,QAAQ;AACR,aACC;AACC,QAAA,GAAG,EAAEjB,QAAQ,CAACC,OAAT,CAAiBgB,QAAQ,GAAG,CAA5B,CADN;AAEC,QAAA,GAAG,EAAEX,KAFN;AAGC,QAAA,SAAS,EAAET,MAAM,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKEwB,KALF,CADD;AASA,KAXA,CADF,CADoB;AAAA,GAApB,CADF,CADD;AAoBA,CApCD;;GAAMvB,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport styles from \"./SlideInText.module.scss\";\n\nconst SlideInText = ({ text }) => {\n\tconst charsRef = useRef([]);\n\tcharsRef.current = new Array(text.length).map(\n\t\t(ref, index) => (usernameRefs.current[index] = React.createref())\n\t);\n\n\tuseEffect(() => {\n\t\tconsole.log(charsRef);\n\t\tgsap.from(charsRef.current, {\n\t\t\tyPercent: 120,\n\t\t\tstagger: 0.2,\n\t\t\tduration: 1,\n\t\t\tease: \"back\",\n\t\t});\n\t}, [charsRef]);\n\tlet refIndex = 0;\n\treturn (\n\t\t<span aria-label={text} role=\"heading\">\n\t\t\t{text.split(\" \").map((word, wordIndex) => (\n\t\t\t\t<span className={styles.word} aria-hidden=\"true\" key={wordIndex}>\n\t\t\t\t\t{word.split(\"\").map((char, index) => {\n\t\t\t\t\t\trefIndex++;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tref={charsRef.current[refIndex - 1]}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={styles.char}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{char}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</span>\n\t);\n};\n\nexport default SlideInText;\n"]},"metadata":{},"sourceType":"module"}