{"ast":null,"code":"var _jsxFileName = \"/Users/frederico/Documents/maxclean/components/slices/CardSection.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Image from \"next/image\";\nimport { RichText } from \"prismic-reactjs\";\nimport styles from \"./CardSection.module.scss\";\nimport grid from \"../../styles/grid.module.scss\";\n\nconst CardSection = ({\n  slice\n}) => {\n  return __jsx(\"section\", {\n    className: `${styles.section} ${grid.loop} ${grid[\"loop--lg\"]} ${grid.inner}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, slice.items.map((item, index) => __jsx(\"article\", {\n    key: `card-${index}`,\n    className: `\n                        ${styles.card} \n                        ${item.negative ? styles.negative : \"\"} \n                        ${styles[`size--${item.card_size}`]}\n                    `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, item.image.url && __jsx(Image, {\n    src: item.image.url,\n    width: item.image.dimensions.width,\n    height: item.image.dimensions.height,\n    layout: \"responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    className: styles[\"card__heading\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }\n  }, item.title), __jsx(\"div\", {\n    className: styles[\"card__body\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, RichText.render(item.bodytext)), __jsx(\"div\", {\n    className: styles[\"card__cta\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, item.cta_text)))));\n};\n\nexport default CardSection;","map":{"version":3,"sources":["/Users/frederico/Documents/maxclean/components/slices/CardSection.js"],"names":["Image","RichText","styles","grid","CardSection","slice","section","loop","inner","items","map","item","index","card","negative","card_size","image","url","dimensions","width","height","title","render","bodytext","cta_text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAClC,SACC;AACC,IAAA,SAAS,EAAG,GAAEH,MAAM,CAACI,OAAQ,IAAGH,IAAI,CAACI,IAAK,IAAGJ,IAAI,CAAC,UAAD,CAAa,IAAGA,IAAI,CAACK,KAAM,EAD7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAChB;AACC,IAAA,GAAG,EAAG,QAAOA,KAAM,EADpB;AAEC,IAAA,SAAS,EAAG;AACjB,0BAA0BV,MAAM,CAACW,IAAK;AACtC,0BAA0BF,IAAI,CAACG,QAAL,GAAgBZ,MAAM,CAACY,QAAvB,GAAkC,EAAG;AAC/D,0BAA0BZ,MAAM,CAAE,SAAQS,IAAI,CAACI,SAAU,EAAzB,CAA4B;AAC5D,qBANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQEJ,IAAI,CAACK,KAAL,CAAWC,GAAX,IACA,MAAC,KAAD;AACC,IAAA,GAAG,EAAEN,IAAI,CAACK,KAAL,CAAWC,GADjB;AAEC,IAAA,KAAK,EAAEN,IAAI,CAACK,KAAL,CAAWE,UAAX,CAAsBC,KAF9B;AAGC,IAAA,MAAM,EAAER,IAAI,CAACK,KAAL,CAAWE,UAAX,CAAsBE,MAH/B;AAIC,IAAA,MAAM,EAAC,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBC;AAAI,IAAA,SAAS,EAAElB,MAAM,CAAC,eAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCS,IAAI,CAACU,KAA9C,CAhBD,EAiBC;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAAC,YAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,QAAQ,CAACqB,MAAT,CAAgBX,IAAI,CAACY,QAArB,CADF,CAjBD,EAoBC;AAAK,IAAA,SAAS,EAAErB,MAAM,CAAC,WAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBS,IAAI,CAACa,QAA5B,CADD,CApBD,CADA,CAHF,CADD;AAgCA,CAjCD;;AAmCA,eAAepB,WAAf","sourcesContent":["import Image from \"next/image\";\nimport { RichText } from \"prismic-reactjs\";\nimport styles from \"./CardSection.module.scss\";\nimport grid from \"../../styles/grid.module.scss\";\n\nconst CardSection = ({ slice }) => {\n\treturn (\n\t\t<section\n\t\t\tclassName={`${styles.section} ${grid.loop} ${grid[\"loop--lg\"]} ${grid.inner}`}\n\t\t>\n\t\t\t{slice.items.map((item, index) => (\n\t\t\t\t<article\n\t\t\t\t\tkey={`card-${index}`}\n\t\t\t\t\tclassName={`\n                        ${styles.card} \n                        ${item.negative ? styles.negative : \"\"} \n                        ${styles[`size--${item.card_size}`]}\n                    `}\n\t\t\t\t>\n\t\t\t\t\t{item.image.url && (\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tsrc={item.image.url}\n\t\t\t\t\t\t\twidth={item.image.dimensions.width}\n\t\t\t\t\t\t\theight={item.image.dimensions.height}\n\t\t\t\t\t\t\tlayout=\"responsive\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<h2 className={styles[\"card__heading\"]}>{item.title}</h2>\n\t\t\t\t\t<div className={styles[\"card__body\"]}>\n\t\t\t\t\t\t{RichText.render(item.bodytext)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles[\"card__cta\"]}>\n\t\t\t\t\t\t<button type=\"button\">{item.cta_text}</button>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t))}\n\t\t</section>\n\t);\n};\n\nexport default CardSection;\n"]},"metadata":{},"sourceType":"module"}